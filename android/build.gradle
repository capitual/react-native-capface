def RN_VERSION = new File(['node', '--print',"JSON.parse(require('fs').readFileSync(require.resolve('react-native/package.json'), 'utf-8')).version"].execute(null, rootDir).text.trim());
def RN_VERSION_STRINGIFY = RN_VERSION.toString();
def MINOR_VERSION = RN_VERSION_STRINGIFY.substring(RN_VERSION_STRINGIFY.indexOf(".") + 1, RN_VERSION_STRINGIFY.lastIndexOf("."));
def IS_NEW_REACT_NATIVE_VERSION = Integer.parseInt(MINOR_VERSION) >= 71;

buildscript {
  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.1"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"


def appProject = rootProject.allprojects.find { it.plugins.hasPlugin('com.android.application') }

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["ReactNativeCapfaceSdk_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["ReactNativeCapfaceSdk_" + name]).toInteger()
}

def supportsNamespace() {
  def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  if (major == 7 && minor >= 3) {
    return true
  }

  return major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.capitual.reactnativecapfacesdk"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
  }
  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  dataBinding {
    enabled = true
  }
  sourceSets {
    main {
      jniLibs.srcDirs = ['libs']
    }
  }
}

repositories {
  mavenCentral()
  google()
}


dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  if (IS_NEW_REACT_NATIVE_VERSION) {
    implementation "com.facebook.react:react-android:+"
  } else {
    implementation "com.facebook.react:react-native:+"
  }

  implementation 'com.squareup.okhttp3:okhttp:3.12.1'
  implementation 'com.squareup.okio:okio:1.15.0'
  implementation 'androidx.appcompat:appcompat:1.3.0'
  implementation 'com.google.code.gson:gson:2.8.6'
  implementation 'com.google.android.material:material:1.5.0'

  // Note: FaceTec SDK implementation
  implementation files("./libs/facetec-sdk-9.6.46.aar")
  implementation(name: 'facetec-sdk-9.6.46', ext: 'aar')
  implementation fileTree(dir: 'libs', include: ['*.aar'])
}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = "ReactNativeCapfaceSdk"
    codegenJavaPackageName = "com.capitual.reactnativecapfacesdk"
  }
}
